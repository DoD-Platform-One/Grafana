global:
  # -- Overrides the Docker registry globally for all images
  imageRegistry: registry1.dso.mil

  # To help compatibility with other charts which use global.imagePullSecrets.
  # Allow either an array of {name: pullSecret} maps (k8s-style), or an array of strings (more common helm-style).
  # Can be templated.
  # global:
  #   imagePullSecrets:
  #   - name: pullSecret1
  #   - name: pullSecret2
  # or
  # global:
  #   imagePullSecrets:
  #   - pullSecret1
  #   - pullSecret2
  imagePullSecrets: []

openshift: false

# -- Toggle creation of Enterprise License Secret
# See https://docs-bigbang.dso.mil/latest/packages/grafana/docs/enterprise
enterprise:
  createSecret: false
  license: null


## DO NOT CHANGE
# -- kube-prometheus-stack dashboard backward-compatibility values
alertmanager:
  enabled: true
coreDns:
  enabled: true
kubeEtcd:
  enabled: true
kubeApiServer:
  enabled: true
kubeControllerManager:
  enabled: true
kubeScheduler:
  enabled: true
kubeProxy:
  enabled: true
nodeExporter:
  enabled: true
  operatingSystems:
    linux:
      enabled: true
    aix:
      enabled: true
    darwin:
      enabled: true
    windows:
      enabled: true
kubelet:
  enabled: true
  namespace: kube-system
windowsMonitoring:
  enabled: true
prometheusRemoteWriteDashboards: true
grafana:
  forceDeployDashboards:
    enabled: true
  defaultDashboardsEnabled:
    enabled: true
  operator:
    dashboardsConfigMapRefEnabled: false
    annotations: {}
    matchLabels: {}
  defaultDashboardsEditable: true
  sidecar:
    dashboards:
      label: grafana_dashboard
      labelValue: "1"
      annotations: {}
# --

networkPolicies:
  enabled: false
  ingressLabels:
    app: public-ingressgateway
    istio: ingressgateway
  additionalPolicies: []

domain: dev.bigbang.mil

autoRollingUpgrade:
  # -- Enable BigBang specific autoRollingUpgrade support
  enabled: true
  image:
    repository: registry1.dso.mil/ironbank/big-bang/base
    tag: 2.1.0

istio:
  enabled: false
  namespace: istio-system
  hardened:
    enabled: false
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    customServiceEntries: []
      # - name: "allow-google"
      #   enabled: true
      #   spec:
      #     hosts:
      #       - google.com
      #     location: MESH_EXTERNAL
      #     ports:
      #       - number: 443
      #         protocol: TLS
      #         name: https
      #     resolution: DNS
    customAuthorizationPolicies: []
    # - name: "allow-nothing"
    #   enabled: true
    #   spec: {}
    kiali:
      enabled: true
      namespaces:
      - kiali
      principals:
      - cluster.local/ns/kiali/sa/kiali-service-account

  grafana:
    # Toggle vs creation
    enabled: true
    annotations: {}
    labels: {}
    gateways:
      - istio-system/main
    hosts:
       - grafana.{{ .Values.domain }}
    service: ""
    port: ""
    namespace: ""
  injection: disabled
  mtls:
    # Note that setting this to STRICT requires additional configuration for Prometheus and monitors.
    # Review `./docs/istio-mtls-metrics.md` for additional information.
    mode: STRICT

sso:
  enabled: false

bbtests:
  enabled: false
  cypress:
    artifacts: true
    envs:
      cypress_grafana_url: 'http://grafana:80'
    resources:
      requests:
        cpu: 2
        memory: 2Gi
      limits:
        cpu: 2
        memory: 2Gi
  istio:
    sidecar:
      resources:
        cpu:
          requests: 100m
          limits: 2000m
        memory:
          requests: 512Mi
          limits: 2048Mi

# -- Values to pass to [the upstream grafana chart](https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml)
# @default -- Upstream chart values
upstream:
  fullnameOverride: "monitoring-grafana"
  nameOverride: "grafana"

  image:
    registry: registry1.dso.mil
    repository: ironbank/big-bang/grafana/grafana-plugins
    # Overrides the Grafana image tag whose default is the chart appVersion
    tag: "12.1.0"
    pullPolicy: IfNotPresent

    pullSecrets:
    - private-registry

  testFramework:
    enabled: false
    image:
      registry: registry1.dso.mil
      repository: ironbank/opensource/bats/bats
      tag: "1.12.0"
    imagePullPolicy: IfNotPresent

  securityContext:
    runAsNonRoot: true
    runAsUser: 65532
    runAsGroup: 65532
    fsGroup: 65532

  downloadDashboardsImage:
    registry: registry1.dso.mil
    repository: ironbank/big-bang/base
    tag: 2.1.0
    #sha: ""
    pullPolicy: IfNotPresent

  downloadDashboards:
    env: {}
    envFromSecret: ""
    resources:
      limits:
        cpu: 20m
        memory: 20Mi
      requests:
        cpu: 20m
        memory: 20Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
    envValueFrom: {}

  resources:
    requests:
      cpu: 100m
      memory: 256Mi

  initChownData:
    enabled: false
    image:
      registry: registry1.dso.mil
      repository: ironbank/redhat/ubi/ubi9-minimal
      tag: "9.6"
      sha: ""
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      readOnlyRootFilesystem: false
      runAsNonRoot: false
      runAsUser: 0
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        add:
          - CHOWN
        drop:
          - ALL

  # Administrator credentials when not using an existing secret (see below)
  adminUser: admin
  adminPassword: prom-operator

  ## Grafana's primary configuration
  ## NOTE: values in map will be converted to ini format
  ## ref: http://docs.grafana.org/installation/configuration/
  ##
  grafana.ini:
    paths:
      data: /var/lib/grafana/
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    analytics:
      reporting_enabled: false
      check_for_updates: false
    log:
      mode: console
    grafana_net:
      url: https://grafana.net
    server:
      domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"
    auth.generic_oauth:
      enabled: false
      client_id: grafana    #this is a sample client_id, review docs/KEYCLOAK.md
      client_secret: secret #this is a sample secret, review docs/KEYCLOAK.md
      scopes: Grafana       #this is a sample client scope, review docs/KEYCLOAK.md
      auth_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
      token_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
      api_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/userinfo
      allow_sign_up: true
      role_attribute_path: Viewer
      # tls_skip_verify_insecure: false
      # tls_client_cert: ""
      # tls_client_key: ""
      # tls_client_ca : /etc/oidc/ca.pem
      # allowed_domains: mycompany.com mycompany.org
      # empty_scopes: false
    plugin.grafana-piechart-panel:
      path: /var/lib/bb-plugins/piechart-panel
    plugin.grafana-polystat-panel:
      path: /var/lib/bb-plugins/polystat-panel
    plugin.redis-datasource:
      path: /var/lib/bb-plugins/redis-datasource
    security:
      angular_support_enabled: false

  ## Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders
  ## Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards
  sidecar:
    image:
      registry: registry1.dso.mil
      repository: ironbank/kiwigrid/k8s-sidecar
      tag: 1.30.7
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
    # Log level default for all sidecars. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL. Defaults to INFO
    # logLevel: INFO
    alerts:
      enabled: false
    dashboards:
      enabled: true
      # label that the configmaps with dashboards are marked with (can be templated)
      label: grafana_dashboard
      # value of label that the configmaps with dashboards are set to
      labelValue: "1"
      # logLevel: INFO
      folder: /tmp/dashboards
      searchNamespace: ALL
      # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
      watchMethod: WATCH
      # search in configmap, secret or both
      resource: both
      multicluster:
        global:
          enabled: true
        etcd:
          enabled: true
    datasources:
      enabled: true
      label: grafana_datasource
      # value of label that the configmaps with datasources are set to
      labelValue: "1" #TODO: Confirm this value is used - Otherwise remove datasources section
      # logLevel: INFO
      searchNamespace: null
      # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
      watchMethod: WATCH
      # search in configmap, secret or both
      resource: both
      resourceName: ""
  ## Add a seperate remote image renderer deployment/service
  imageRenderer:
    enabled: false
    image:
      registry: registry1.dso.mil
      repository: ironbank/opensource/grafana/grafana-image-renderer
      tag: v4.0.10
      pullPolicy: Always
    service:
      enabled: true
      portName: 'http-web'

  # assertNoLeakedSecrets is a helper function defined in _helpers.tpl that checks if secret
  # values are not exposed in the rendered grafana.ini configmap. It is enabled by default.
  #
  # To pass values into grafana.ini without exposing them in a configmap, use variable expansion:
  # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#variable-expansion
  #
  # Alternatively, if you wish to allow secret values to be exposed in the rendered grafana.ini configmap,
  # you can disable this check by setting assertNoLeakedSecrets to false.
  assertNoLeakedSecrets: false
